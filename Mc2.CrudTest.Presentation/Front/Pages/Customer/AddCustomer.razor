@page "/addcustomer"
@inject NavigationManager _navigationManager
@inject HttpClient _http
@inject IJSRuntime _jsRuntime

<h1>Add Customer</h1>

<EditForm Model="@_model" OnValidSubmit="@InsertCustomer">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="row">
        <div class="col-md-8">
            <div class="form-group">
                <label for="FirstName" class="control-label">First Name</label>
                <input form="FirstName" class="form-control" @bind="@_model.FirstName" />
            </div>
            <div class="form-group">
                <label for="LastName" class="control-label">Last Name</label>
                <input form="LastName" class="form-control" @bind="@_model.LastName" />
            </div>
            <div class="form-group">
                <label for="PhoneNumber" class="control-label">Phone Number</label>
                <input form="PhoneNumber" class="form-control" @bind="@_model.PhoneNumber" />
            </div>
            <div class="form-group">
                <label for="DateOfBirth" class="control-label">Date Of Birth</label>
                <input form="DateOfBirth" type="date" class="form-control" @bind="@_model.DateOfBirth" />
            </div>
            <div class="form-group">
                <label for="Email" class="control-label">Email</label>
                <input form="Email" class="form-control" @bind="@_model.Email" />
            </div>
            <div class="form-group">
                <label for="BankAccountNumber" class="control-label">Bank Account Number</label>
                <input form="BankAccountNumber" class="form-control" @bind="@_model.BankAccountNumber" />
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <input type="submit" class="btn btn-primary" value="Save" />
                <input type="button" class="btn btn-primary" @onclick="@Cancel" value="Cancel" />
            </div>
        </div>
    </div>
</EditForm>

@code {
    Customer _model = new();
    protected async void InsertCustomer()
    {
        HttpResponseMessage responseMessage = await _http.PostAsJsonAsync<Customer>("InsertCustomer", _model).ConfigureAwait(false);
        string resultString = await responseMessage.Content.ReadAsStringAsync();
        ServiceResponse<int>? result = JsonConvert.DeserializeObject<ServiceResponse<int>>(resultString);

        if (result.ResultStatus == ResultStatus.Successful)
        {
            await _jsRuntime.InvokeVoidAsync("alert", result.Message);
            _navigationManager.NavigateTo("customerlist");
        }
        else
        {
            await _jsRuntime.InvokeVoidAsync("alert", string.Join(',', result.Errors));
        }
    }


    void Cancel()
    {
        _navigationManager.NavigateTo("customerlist");
    }
}
